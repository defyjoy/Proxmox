---
- name: Provision VMs in Proxmox from Template 9000
  hosts: k8s_cluster
  gather_facts: false
  become: false  # Proxmox API calls don't need privilege escalation
  
  vars_files:
    - "{{ playbook_dir }}/../group_vars/all/vars.yml"
    - "{{ playbook_dir }}/../group_vars/all/vault.yml"
  
  vars:
    # Proxmox API connection settings (loaded from group_vars/all/vars.yml)
    # Sensitive credentials are in encrypted group_vars/all/vault.yml
    proxmox_template_id: 9000
    proxmox_template_name: "ubuntu-cloud-init"  # Update with your actual template name in Proxmox
    
    # VM specifications
    vm_cores: 2
    vm_memory: 4096
    vm_disk_size: 32
    vm_storage: local  # Update with your storage name
    vm_network_bridge: vmbr0
    vm_gateway: 192.168.68.1
    
    # Cloud-init settings (SSH key will be read from file)
    vm_ciuser: root
    vm_nameserver: 8.8.8.8
    
    # Master nodes get IDs starting from 200
    # Worker nodes get IDs starting from 210
    master_vm_id_start: 100
    worker_vm_id_start: 110
  
  tasks:
    - name: Debug - Show all Proxmox vault variables
      ansible.builtin.debug:
        msg:
          - "=== Vault Variables ==="
          - "vault_proxmox_api_token_id: {{ vault_proxmox_api_token_id | default('NOT_SET') }}"
          - "vault_proxmox_api_token_secret: {{ vault_proxmox_api_token_secret | default('NOT_SET') | regex_replace('^(.{8}).*(.{4})$', '\\1****\\2') }}"
          - "=== Group Variables ==="
          - "proxmox_host: {{ proxmox_host }}"
          - "proxmox_api_user: {{ proxmox_api_user }}"
          - "proxmox_node: {{ proxmox_node }}"
      run_once: true
      tags: [debug, never]
    
    - name: Set VM ID for master nodes
      ansible.builtin.set_fact:
        vm_id: "{{ master_vm_id_start + groups['masters'].index(inventory_hostname) }}"
        vm_name: "{{ inventory_hostname }}"
      when: inventory_hostname in groups['masters']
    
    - name: Set VM ID for worker nodes
      ansible.builtin.set_fact:
        vm_id: "{{ worker_vm_id_start + groups['workers'].index(inventory_hostname) }}"
        vm_name: "{{ inventory_hostname }}"
      when: inventory_hostname in groups['workers']
    
    - name: Display VM provisioning information
      ansible.builtin.debug:
        msg: "Provisioning VM '{{ vm_name }}' with ID {{ vm_id }} at IP {{ ansible_host }}"
    
    - name: Provision VM from template
      ansible.builtin.include_role:
        name: provision-vms

- name: Post-provisioning tasks
  hosts: k8s_cluster
  gather_facts: false
  become: false
  
  tasks:
    - name: Wait for cloud-init to complete
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: 22
        delay: 30
        timeout: 600
        state: started
        search_regex: OpenSSH
      delegate_to: localhost
      connection: local
    
    - name: Wait for SSH to be fully ready
      ansible.builtin.wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 10
        timeout: 300
    
    - name: Wait for cloud-init to finish initialization
      ansible.builtin.command: cloud-init status --wait
      register: cloud_init_status
      changed_when: false
      failed_when: false
      async: 300
      poll: 10
    
    - name: Display cloud-init status
      ansible.builtin.debug:
        msg: "Cloud-init status: {{ cloud_init_status.stdout if cloud_init_status is succeeded else 'Skipped or not available' }}"
    
    - name: Gather facts after provisioning
      ansible.builtin.setup:
    
    - name: Display provisioned VM information
      ansible.builtin.debug:
        msg:
          - "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          - "✅ VM Provisioned Successfully"
          - "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          - "Hostname: {{ inventory_hostname }}"
          - "IP Address: {{ ansible_default_ipv4.address | default(ansible_host) }}"
          - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Kernel: {{ ansible_kernel }}"
          - "Uptime: {{ ansible_uptime_seconds | default(0) | int // 60 }} minutes"
          - "SSH Status: ✅ Ready"

